{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/components/AnimeList.jsx\";\nimport _JSXStyle from \"styled-jsx/style\";\nimport Image from \"next/image\";\nimport { useEffect, useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nexport const AnimeList = () => {\n  const {\n    0: count,\n    1: setCount\n  } = useState(10);\n  const GET_ANIMES = gql`\n    query GetAnimes {\n      Page(page: 1, perPage: ${count}) { \n        pageInfo {\n          total\n          currentPage\n          lastPage\n          hasNextPage\n          perPage\n        }\n        media(type: ANIME) {\n          id\n          title {\n            english\n            romaji\n          }\n          episodes\n        }\n      }\n    }\n  `;\n  const {\n    0: animes,\n    1: setAnimes\n  } = useState([]);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ANIMES);\n  useEffect(() => {\n    if (data) {\n      setAnimes(data.Page.media);\n    }\n  }, [data]);\n\n  const handleSaveAnimes = async (anime, e) => {\n    e.preventDefault();\n    const response = await fetch(\"http://localhost:3000/api/animedb\", {\n      method: \"POST\",\n      mode: \"cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(anime)\n    });\n    return response.json();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jsx-2835321890\" + \" \" + \"last-released\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"jsx-2835321890\",\n      children: \"Dernieres sorties\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jsx-2835321890\" + \" \" + \"anime-card\",\n      children: animes && animes.map((anime, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"jsx-2835321890\" + \" \" + \"anime\",\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            src: `/animes/anime_default.jpg`,\n            alt: \"logo\",\n            width: 90,\n            height: 120,\n            className: \"anime-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"jsx-2835321890\" + \" \" + \"anime-title\",\n            children: anime.title.english ? anime.title.english : anime.title.romaji\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"jsx-2835321890\" + \" \" + \"anime-score\",\n            children: [\"Note : \", anime.score ? anime.score : \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => handleSaveAnimes(anime, e),\n            className: \"jsx-2835321890\",\n            children: \"save anime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), count < 50 ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 10),\n      className: \"jsx-2835321890\" + \" \" + \"show-more\",\n      children: \"Voir plus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(_JSXStyle, {\n      id: \"2835321890\",\n      children: \".last-released.jsx-2835321890{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column;margin-bottom:20px;}.anime.jsx-2835321890{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin:5px 0 5px 0;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;border-radius:5px;border:solid 1px #997af0;background-color:#f7f1f4;padding:5px;}.anime-title.jsx-2835321890,.anime-score.jsx-2835321890{margin:0 10px 0 10px;font-weight:600;}.show-more.jsx-2835321890{background-color:#997af0;color:white;padding:1rem 2rem;border:none;font-weight:bold;cursor:pointer;border-radius:0.4rem;font-size:1rem;text-transform:uppercase;-webkit-transition:0.5s ease-in-out;transition:0.5s ease-in-out;}.anime-image.jsx-2835321890{padding:6px;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9hcHAvY29tcG9uZW50cy9BbmltZUxpc3QuanN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFGa0IsQUFHd0IsQUFLQSxBQVdRLEFBSUksQUFZYixZQUNkLFNBaEJrQixJQUlKLFlBSGQsQUFJb0Isa0JBQ04sWUFDSyxPQXZCSyxBQUtILFVBbUJKLGVBQ00scUJBQ04sZUFDVSxpQkExQk4sUUEyQlMsT0F0QlQsSUFKckIsZUFLZ0Msc0NBc0JoQyw2RUFyQm9CLGtCQUNPLHlCQUNBLHlCQUNiLFlBQ2QiLCJmaWxlIjoiL2FwcC9jb21wb25lbnRzL0FuaW1lTGlzdC5qc3giLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgSW1hZ2UgZnJvbSBcIm5leHQvaW1hZ2VcIjtcclxuaW1wb3J0IHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBncWwsIHVzZVF1ZXJ5IH0gZnJvbSBcIkBhcG9sbG8vY2xpZW50XCI7XHJcblxyXG5leHBvcnQgY29uc3QgQW5pbWVMaXN0ID0gKCkgPT4ge1xyXG4gIGNvbnN0IFtjb3VudCwgc2V0Q291bnRdID0gdXNlU3RhdGUoMTApO1xyXG4gIGNvbnN0IEdFVF9BTklNRVMgPSBncWxgXHJcbiAgICBxdWVyeSBHZXRBbmltZXMge1xyXG4gICAgICBQYWdlKHBhZ2U6IDEsIHBlclBhZ2U6ICR7Y291bnR9KSB7IFxyXG4gICAgICAgIHBhZ2VJbmZvIHtcclxuICAgICAgICAgIHRvdGFsXHJcbiAgICAgICAgICBjdXJyZW50UGFnZVxyXG4gICAgICAgICAgbGFzdFBhZ2VcclxuICAgICAgICAgIGhhc05leHRQYWdlXHJcbiAgICAgICAgICBwZXJQYWdlXHJcbiAgICAgICAgfVxyXG4gICAgICAgIG1lZGlhKHR5cGU6IEFOSU1FKSB7XHJcbiAgICAgICAgICBpZFxyXG4gICAgICAgICAgdGl0bGUge1xyXG4gICAgICAgICAgICBlbmdsaXNoXHJcbiAgICAgICAgICAgIHJvbWFqaVxyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgZXBpc29kZXNcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBgO1xyXG4gIGNvbnN0IFthbmltZXMsIHNldEFuaW1lc10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgY29uc3QgeyBsb2FkaW5nLCBlcnJvciwgZGF0YSB9ID0gdXNlUXVlcnkoR0VUX0FOSU1FUyk7XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBpZiAoZGF0YSkge1xyXG4gICAgICBzZXRBbmltZXMoZGF0YS5QYWdlLm1lZGlhKTtcclxuICAgIH1cclxuICB9LCBbZGF0YV0pO1xyXG5cclxuICBjb25zdCBoYW5kbGVTYXZlQW5pbWVzID0gYXN5bmMgKGFuaW1lLCBlKSA9PiB7XHJcbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FwaS9hbmltZWRiXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBPU1RcIixcclxuICAgICAgbW9kZTogXCJjb3JzXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcclxuICAgICAgfSxcclxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYW5pbWUpLFxyXG4gICAgfSk7XHJcbiAgICByZXR1cm4gcmVzcG9uc2UuanNvbigpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8ZGl2IGNsYXNzTmFtZT1cImxhc3QtcmVsZWFzZWRcIj5cclxuICAgICAgPGgzPkRlcm5pZXJlcyBzb3J0aWVzPC9oMz5cclxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltZS1jYXJkXCI+XHJcbiAgICAgICAge2FuaW1lcyAmJlxyXG4gICAgICAgICAgYW5pbWVzLm1hcCgoYW5pbWUsIGluZGV4KSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJhbmltZVwiIGtleT17aW5kZXh9PlxyXG4gICAgICAgICAgICAgICAgPEltYWdlXHJcbiAgICAgICAgICAgICAgICAgIHNyYz17YC9hbmltZXMvYW5pbWVfZGVmYXVsdC5qcGdgfVxyXG4gICAgICAgICAgICAgICAgICBhbHQ9e1wibG9nb1wifVxyXG4gICAgICAgICAgICAgICAgICB3aWR0aD17OTB9XHJcbiAgICAgICAgICAgICAgICAgIGhlaWdodD17MTIwfVxyXG4gICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJhbmltZS1pbWFnZVwiXHJcbiAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgPHAgY2xhc3NOYW1lPVwiYW5pbWUtdGl0bGVcIj5cclxuICAgICAgICAgICAgICAgICAge2FuaW1lLnRpdGxlLmVuZ2xpc2hcclxuICAgICAgICAgICAgICAgICAgICA/IGFuaW1lLnRpdGxlLmVuZ2xpc2hcclxuICAgICAgICAgICAgICAgICAgICA6IGFuaW1lLnRpdGxlLnJvbWFqaX1cclxuICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgICAgIDxwIGNsYXNzTmFtZT1cImFuaW1lLXNjb3JlXCI+XHJcbiAgICAgICAgICAgICAgICAgIE5vdGUgOiB7YW5pbWUuc2NvcmUgPyBhbmltZS5zY29yZSA6IFwiTi9BXCJ9XHJcbiAgICAgICAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eyhlKSA9PiBoYW5kbGVTYXZlQW5pbWVzKGFuaW1lLCBlKX0+XHJcbiAgICAgICAgICAgICAgICAgIHNhdmUgYW5pbWVcclxuICAgICAgICAgICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgfSl9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICB7Y291bnQgPCA1MCA/IChcclxuICAgICAgICA8YnV0dG9uIG9uQ2xpY2s9eygpID0+IHNldENvdW50KGNvdW50ICsgMTApfSBjbGFzc05hbWU9XCJzaG93LW1vcmVcIj5cclxuICAgICAgICAgIFZvaXIgcGx1c1xyXG4gICAgICAgIDwvYnV0dG9uPlxyXG4gICAgICApIDogbnVsbH1cclxuXHJcbiAgICAgIDxzdHlsZSBqc3g+e2BcclxuICAgICAgICAubGFzdC1yZWxlYXNlZCB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hbmltZSB7XHJcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgIG1hcmdpbjogNXB4IDAgNXB4IDA7XHJcbiAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XHJcbiAgICAgICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgICAgICBib3JkZXI6IHNvbGlkIDFweCAjOTk3YWYwO1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjFmNDtcclxuICAgICAgICAgIHBhZGRpbmc6IDVweDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmFuaW1lLXRpdGxlLFxyXG4gICAgICAgIC5hbmltZS1zY29yZSB7XHJcbiAgICAgICAgICBtYXJnaW46IDAgMTBweCAwIDEwcHg7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgICAgIH1cclxuICAgICAgICAuc2hvdy1tb3JlIHtcclxuICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICM5OTdhZjA7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgICAgIGJvcmRlci1yYWRpdXM6IDAuNHJlbTtcclxuICAgICAgICAgIGZvbnQtc2l6ZTogMXJlbTtcclxuICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbiAgICAgICAgICB0cmFuc2l0aW9uOiAwLjVzIGVhc2UtaW4tb3V0O1xyXG4gICAgICAgIH1cclxuICAgICAgICAuYW5pbWUtaW1hZ2Uge1xyXG4gICAgICAgICAgcGFkZGluZzogNnB4O1xyXG4gICAgICAgIH1cclxuICAgICAgYH08L3N0eWxlPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufTtcclxuIl19 */\\n/*@ sourceURL=/app/components/AnimeList.jsx */\"\n    }, void 0, false, void 0, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/app/components/AnimeList.jsx"],"names":["Image","useEffect","useState","gql","useQuery","AnimeList","count","setCount","GET_ANIMES","animes","setAnimes","loading","error","data","Page","media","handleSaveAnimes","anime","e","preventDefault","response","fetch","method","mode","headers","body","JSON","stringify","json","map","index","title","english","romaji","score"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMM,UAAU,GAAGL,GAAI;AACzB;AACA,+BAA+BG,KAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GApBE;AAqBA,QAAM;AAAA,OAACG,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAES,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BT,QAAQ,CAACI,UAAD,CAAzC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAJ,EAAU;AACRH,MAAAA,SAAS,CAACG,IAAI,CAACC,IAAL,CAAUC,KAAX,CAAT;AACD;AACF,GAJQ,EAIN,CAACF,IAAD,CAJM,CAAT;;AAMA,QAAMG,gBAAgB,GAAG,OAAOC,KAAP,EAAcC,CAAd,KAAoB;AAC3CA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAChEC,MAAAA,MAAM,EAAE,MADwD;AAEhEC,MAAAA,IAAI,EAAE,MAF0D;AAGhEC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHuD;AAMhEC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeV,KAAf;AAN0D,KAAtC,CAA5B;AAQA,WAAOG,QAAQ,CAACQ,IAAT,EAAP;AACD,GAXD;;AAaA,sBACE;AAAA,wCAAe,eAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,0CAAe,YAAf;AAAA,gBACGnB,MAAM,IACLA,MAAM,CAACoB,GAAP,CAAW,CAACZ,KAAD,EAAQa,KAAR,KAAkB;AAC3B,4BACE;AAAA,8CAAe,OAAf;AAAA,kCACE,QAAC,KAAD;AACE,YAAA,GAAG,EAAG,2BADR;AAEE,YAAA,GAAG,EAAE,MAFP;AAGE,YAAA,KAAK,EAAE,EAHT;AAIE,YAAA,MAAM,EAAE,GAJV;AAKE,YAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,kBADF,eAQE;AAAA,gDAAa,aAAb;AAAA,sBACGb,KAAK,CAACc,KAAN,CAAYC,OAAZ,GACGf,KAAK,CAACc,KAAN,CAAYC,OADf,GAEGf,KAAK,CAACc,KAAN,CAAYE;AAHlB;AAAA;AAAA;AAAA;AAAA,kBARF,eAaE;AAAA,gDAAa,aAAb;AAAA,kCACUhB,KAAK,CAACiB,KAAN,GAAcjB,KAAK,CAACiB,KAApB,GAA4B,KADtC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAgBE;AAAQ,YAAA,OAAO,EAAGhB,CAAD,IAAOF,gBAAgB,CAACC,KAAD,EAAQC,CAAR,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA,WAA4BY,KAA5B;AAAA;AAAA;AAAA;AAAA,gBADF;AAsBD,OAvBD;AAFJ;AAAA;AAAA;AAAA;AAAA,YAFF,EA6BGxB,KAAK,GAAG,EAAR,gBACC;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,EAAT,CAA/B;AAAA,0CAAuD,WAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GAIG,IAjCN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2ED,CAxHM","sourcesContent":["import Image from \"next/image\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { gql, useQuery } from \"@apollo/client\";\r\n\r\nexport const AnimeList = () => {\r\n  const [count, setCount] = useState(10);\r\n  const GET_ANIMES = gql`\r\n    query GetAnimes {\r\n      Page(page: 1, perPage: ${count}) { \r\n        pageInfo {\r\n          total\r\n          currentPage\r\n          lastPage\r\n          hasNextPage\r\n          perPage\r\n        }\r\n        media(type: ANIME) {\r\n          id\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          episodes\r\n        }\r\n      }\r\n    }\r\n  `;\r\n  const [animes, setAnimes] = useState([]);\r\n  const { loading, error, data } = useQuery(GET_ANIMES);\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      setAnimes(data.Page.media);\r\n    }\r\n  }, [data]);\r\n\r\n  const handleSaveAnimes = async (anime, e) => {\r\n    e.preventDefault();\r\n    const response = await fetch(\"http://localhost:3000/api/animedb\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(anime),\r\n    });\r\n    return response.json();\r\n  };\r\n\r\n  return (\r\n    <div className=\"last-released\">\r\n      <h3>Dernieres sorties</h3>\r\n      <div className=\"anime-card\">\r\n        {animes &&\r\n          animes.map((anime, index) => {\r\n            return (\r\n              <div className=\"anime\" key={index}>\r\n                <Image\r\n                  src={`/animes/anime_default.jpg`}\r\n                  alt={\"logo\"}\r\n                  width={90}\r\n                  height={120}\r\n                  className=\"anime-image\"\r\n                />\r\n                <p className=\"anime-title\">\r\n                  {anime.title.english\r\n                    ? anime.title.english\r\n                    : anime.title.romaji}\r\n                </p>\r\n                <p className=\"anime-score\">\r\n                  Note : {anime.score ? anime.score : \"N/A\"}\r\n                </p>\r\n                <button onClick={(e) => handleSaveAnimes(anime, e)}>\r\n                  save anime\r\n                </button>\r\n              </div>\r\n            );\r\n          })}\r\n      </div>\r\n      {count < 50 ? (\r\n        <button onClick={() => setCount(count + 10)} className=\"show-more\">\r\n          Voir plus\r\n        </button>\r\n      ) : null}\r\n\r\n      <style jsx>{`\r\n        .last-released {\r\n          display: flex;\r\n          flex-direction: column;\r\n          margin-bottom: 20px;\r\n        }\r\n        .anime {\r\n          display: flex;\r\n          align-items: center;\r\n          margin: 5px 0 5px 0;\r\n          justify-content: space-between;\r\n          border-radius: 5px;\r\n          border: solid 1px #997af0;\r\n          background-color: #f7f1f4;\r\n          padding: 5px;\r\n        }\r\n        .anime-title,\r\n        .anime-score {\r\n          margin: 0 10px 0 10px;\r\n          font-weight: 600;\r\n        }\r\n        .show-more {\r\n          background-color: #997af0;\r\n          color: white;\r\n          padding: 1rem 2rem;\r\n          border: none;\r\n          font-weight: bold;\r\n          cursor: pointer;\r\n          border-radius: 0.4rem;\r\n          font-size: 1rem;\r\n          text-transform: uppercase;\r\n          transition: 0.5s ease-in-out;\r\n        }\r\n        .anime-image {\r\n          padding: 6px;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}