{"ast":null,"code":"const {\n  MysqlConnection\n} = require(\"../../repository/MysqlConnection\");\n\nimport { AnilistClient } from \"../../http/AnilistClient\";\nimport { gql } from \"@apollo/client\";\n\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\n\nexport default (async (req, res) => {\n  console.log(data);\n\n  if (req.method === \"POST\") {\n    try {\n      AnilistClient.query({\n        query: gql`\n            query GetAnimes {\n      Page(page: 1, perPage: ${count}) { \n        pageInfo {\n          total\n          currentPage\n          lastPage\n          hasNextPage\n          perPage\n        }\n        media(type: ANIME) {\n          id\n          title {\n            english\n            romaji\n          }\n          episodes\n        }\n      }\n    }\n        `\n      });\n      const newAnime = await Anime.create({\n        type: \"ANIME\",\n        english: \"englishTest\",\n        romaji: \"romajiTest\",\n        description: \"descTest\",\n        score: 5\n      });\n      res.status(202).send(newAnime);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  }\n\n  if (req.method === \"GET\") {\n    try {\n      const allResponse = await Anime.findAll();\n      res.status(202).json(allResponse);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/app/pages/api/anime.js"],"names":["MysqlConnection","require","AnilistClient","gql","Anime","req","res","console","log","data","method","query","count","newAnime","create","type","english","romaji","description","score","status","send","error","message","allResponse","findAll","json"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAsBC,OAAO,CAAC,kCAAD,CAAnC;;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;;AACA,MAAMC,KAAK,GAAGH,OAAO,CAAC,qBAAD,CAAP,CAA+BD,eAA/B,CAAd;;AAEA,gBAAe,OAAOK,GAAP,EAAYC,GAAZ,KAAoB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;;AACA,MAAIJ,GAAG,CAACK,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACFR,MAAAA,aAAa,CAACS,KAAd,CAAoB;AAClBA,QAAAA,KAAK,EAAER,GAAI;AACnB;AACA,+BAA+BS,KAAM;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArB0B,OAApB;AAuBA,YAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,MAAN,CAAa;AAClCC,QAAAA,IAAI,EAAE,OAD4B;AAElCC,QAAAA,OAAO,EAAE,aAFyB;AAGlCC,QAAAA,MAAM,EAAE,YAH0B;AAIlCC,QAAAA,WAAW,EAAE,UAJqB;AAKlCC,QAAAA,KAAK,EAAE;AAL2B,OAAb,CAAvB;AAOAb,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBR,QAArB;AACD,KAhCD,CAgCE,OAAOS,KAAP,EAAc;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEe,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,OAAZ;AACD;AACF;;AAED,MAAIlB,GAAG,CAACK,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AACF,YAAMc,WAAW,GAAG,MAAMpB,KAAK,CAACqB,OAAN,EAA1B;AACAnB,MAAAA,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqBF,WAArB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdf,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEe,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,OAAZ;AACD;AACF;AACF,CAhDD","sourcesContent":["const { MysqlConnection } = require(\"../../repository/MysqlConnection\");\r\nimport { AnilistClient } from \"../../http/AnilistClient\";\r\nimport { gql } from \"@apollo/client\";\r\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\r\n\r\nexport default async (req, res) => {\r\n  console.log(data);\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      AnilistClient.query({\r\n        query: gql`\r\n            query GetAnimes {\r\n      Page(page: 1, perPage: ${count}) { \r\n        pageInfo {\r\n          total\r\n          currentPage\r\n          lastPage\r\n          hasNextPage\r\n          perPage\r\n        }\r\n        media(type: ANIME) {\r\n          id\r\n          title {\r\n            english\r\n            romaji\r\n          }\r\n          episodes\r\n        }\r\n      }\r\n    }\r\n        `,\r\n      });\r\n      const newAnime = await Anime.create({\r\n        type: \"ANIME\",\r\n        english: \"englishTest\",\r\n        romaji: \"romajiTest\",\r\n        description: \"descTest\",\r\n        score: 5,\r\n      });\r\n      res.status(202).send(newAnime);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  }\r\n\r\n  if (req.method === \"GET\") {\r\n    try {\r\n      const allResponse = await Anime.findAll();\r\n      res.status(202).json(allResponse);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}