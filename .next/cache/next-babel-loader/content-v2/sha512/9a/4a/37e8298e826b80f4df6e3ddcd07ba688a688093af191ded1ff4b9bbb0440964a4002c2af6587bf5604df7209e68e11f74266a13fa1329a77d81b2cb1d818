{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const usePostFetch = (uri, payload) => {\n  const {\n    0: data,\n    1: setData\n  } = useState(null);\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(false);\n  const {\n    0: error,\n    1: setError\n  } = useState(null);\n  useEffect(() => {\n    (async function () {\n      try {\n        setLoading(true);\n        const response = await axios.post(uri, poayload, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setData(response.data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  return {\n    error,\n    loading,\n    data\n  };\n};","map":{"version":3,"sources":["/app/components/hooks/usePostFetch.js"],"names":["useState","useEffect","usePostFetch","uri","payload","data","setData","loading","setLoading","error","setError","response","axios","post","poayload","headers","err"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC5C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBN,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM;AAAA,OAACO,OAAD;AAAA,OAAUC;AAAV,MAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAA,OAACS,KAAD;AAAA,OAAQC;AAAR,MAAoBV,QAAQ,CAAC,IAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,kBAAkB;AACjB,UAAI;AACFO,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAWV,GAAX,EAAgBW,QAAhB,EAA0B;AAC/CC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADsC,SAA1B,CAAvB;AAKAT,QAAAA,OAAO,CAACK,QAAQ,CAACN,IAAV,CAAP;AACD,OARD,CAQE,OAAOW,GAAP,EAAY;AACZN,QAAAA,QAAQ,CAACM,GAAD,CAAR;AACD,OAVD,SAUU;AACRR,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,KAAF;AAASF,IAAAA,OAAT;AAAkBF,IAAAA;AAAlB,GAAP;AACD,CAxBM","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nexport const usePostFetch = (uri, payload) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.post(uri, poayload, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        setData(response.data);\r\n      } catch (err) {\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return { error, loading, data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}