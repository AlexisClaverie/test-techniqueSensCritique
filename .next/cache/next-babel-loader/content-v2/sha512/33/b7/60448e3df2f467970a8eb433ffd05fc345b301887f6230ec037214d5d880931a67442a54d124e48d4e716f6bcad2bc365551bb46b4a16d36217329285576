{"ast":null,"code":"export const usePostFetch = (uri, payload) => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    (async function () {\n      try {\n        setLoading(true);\n        const response = await axios.post(uri, poayload, {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        });\n        setData(response.data);\n      } catch (err) {\n        setError(err);\n      } finally {\n        setLoading(false);\n      }\n    })();\n  }, []);\n  return {\n    error,\n    loading,\n    data\n  };\n};","map":{"version":3,"sources":["/app/components/hooks/usePostFetch.js"],"names":["usePostFetch","uri","payload","data","setData","useState","loading","setLoading","error","setError","useEffect","response","axios","post","poayload","headers","err"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,GAAD,EAAMC,OAAN,KAAkB;AAC5C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBC,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,kBAAkB;AACjB,UAAI;AACFH,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACC,IAAN,CAAWZ,GAAX,EAAgBa,QAAhB,EAA0B;AAC/CC,UAAAA,OAAO,EAAE;AACP,4BAAgB;AADT;AADsC,SAA1B,CAAvB;AAKAX,QAAAA,OAAO,CAACO,QAAQ,CAACR,IAAV,CAAP;AACD,OARD,CAQE,OAAOa,GAAP,EAAY;AACZP,QAAAA,QAAQ,CAACO,GAAD,CAAR;AACD,OAVD,SAUU;AACRT,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF,KAdD;AAeD,GAhBQ,EAgBN,EAhBM,CAAT;AAkBA,SAAO;AAAEC,IAAAA,KAAF;AAASF,IAAAA,OAAT;AAAkBH,IAAAA;AAAlB,GAAP;AACD,CAxBM","sourcesContent":["export const usePostFetch = (uri, payload) => {\r\n  const [data, setData] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      try {\r\n        setLoading(true);\r\n        const response = await axios.post(uri, poayload, {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        setData(response.data);\r\n      } catch (err) {\r\n        setError(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return { error, loading, data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}