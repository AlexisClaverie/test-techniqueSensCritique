{"ast":null,"code":"const {\n  MysqlConnection\n} = require(\"../../repository/MysqlConnection\");\n\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\n\nimport { gql, useQuery } from \"@apollo/client\";\nconst GET_ANIMES = gql`\n  query GetAnimes {\n    Page(page: 2, perPage: 50) {\n      pageInfo {\n        total\n        currentPage\n        lastPage\n        hasNextPage\n        perPage\n      }\n      media(type: ANIME) {\n        id\n        title {\n          english\n          romaji\n        }\n        episodes\n      }\n    }\n  }\n`;\nconst {\n  loading,\n  error,\n  data\n} = useQuery(GET_ANIMES);\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      res.status(202).send(data);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/app/pages/api/animedb.js"],"names":["MysqlConnection","require","Anime","gql","useQuery","GET_ANIMES","loading","error","data","req","res","method","status","send","console","log","message"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAsBC,OAAO,CAAC,kCAAD,CAAnC;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,qBAAD,CAAP,CAA+BD,eAA/B,CAAd;;AACA,SAASG,GAAT,EAAcC,QAAd,QAA8B,gBAA9B;AACA,MAAMC,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;AAqBA,MAAM;AAAEG,EAAAA,OAAF;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,IAA2BJ,QAAQ,CAACC,UAAD,CAAzC;AACA,gBAAe,OAAOI,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACFD,MAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBL,IAArB;AACD,KAFD,CAEE,OAAOD,KAAP,EAAc;AACdO,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEC,QAAAA,OAAO,EAAET,KAAK,CAACS;AAAjB,OAAZ;AACD;AACF;AACF,CARD","sourcesContent":["const { MysqlConnection } = require(\"../../repository/MysqlConnection\");\r\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\r\nimport { gql, useQuery } from \"@apollo/client\";\r\nconst GET_ANIMES = gql`\r\n  query GetAnimes {\r\n    Page(page: 2, perPage: 50) {\r\n      pageInfo {\r\n        total\r\n        currentPage\r\n        lastPage\r\n        hasNextPage\r\n        perPage\r\n      }\r\n      media(type: ANIME) {\r\n        id\r\n        title {\r\n          english\r\n          romaji\r\n        }\r\n        episodes\r\n      }\r\n    }\r\n  }\r\n`;\r\nconst { loading, error, data } = useQuery(GET_ANIMES);\r\nexport default async (req, res) => {\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      res.status(202).send(data);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}