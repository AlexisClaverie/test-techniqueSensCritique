{"ast":null,"code":"const {\n  MysqlConnection\n} = require(\"../../repository/MysqlConnection\");\n\nimport { AnilistClient } from \"../../http/AnilistClient\";\nimport { gql } from \"@apollo/client\";\n\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\n\nexport default (async (req, res) => {\n  if (req.method === \"POST\") {\n    try {\n      console.log(res);\n      const animes = {\n        type: \"toto\",\n        english: \"dfege\",\n        romaji: \"dede\",\n        description: \"fsjfdsjmgjbqreogb\",\n        score: 2\n      };\n      res.status(200).json(animes);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  }\n\n  if (req.method === \"GET\") {\n    try {\n      const allResponse = await Anime.findAll();\n      res.status(202).json(allResponse);\n    } catch (error) {\n      console.log({\n        message: error.message\n      });\n    }\n  }\n});","map":{"version":3,"sources":["/app/pages/api/anime.js"],"names":["MysqlConnection","require","AnilistClient","gql","Anime","req","res","method","console","log","animes","type","english","romaji","description","score","status","json","error","message","allResponse","findAll"],"mappings":"AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAsBC,OAAO,CAAC,kCAAD,CAAnC;;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,GAAT,QAAoB,gBAApB;;AACA,MAAMC,KAAK,GAAGH,OAAO,CAAC,qBAAD,CAAP,CAA+BD,eAA/B,CAAd;;AAEA,gBAAe,OAAOK,GAAP,EAAYC,GAAZ,KAAoB;AACjC,MAAID,GAAG,CAACE,MAAJ,KAAe,MAAnB,EAA2B;AACzB,QAAI;AACFC,MAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACA,YAAMI,MAAM,GAAG;AACbC,QAAAA,IAAI,EAAE,MADO;AAEbC,QAAAA,OAAO,EAAE,OAFI;AAGbC,QAAAA,MAAM,EAAE,MAHK;AAIbC,QAAAA,WAAW,EAAE,mBAJA;AAKbC,QAAAA,KAAK,EAAE;AALM,OAAf;AAOAT,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBP,MAArB;AACD,KAVD,CAUE,OAAOQ,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEU,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,OAAZ;AACD;AACF;;AAED,MAAId,GAAG,CAACE,MAAJ,KAAe,KAAnB,EAA0B;AACxB,QAAI;AACF,YAAMa,WAAW,GAAG,MAAMhB,KAAK,CAACiB,OAAN,EAA1B;AACAf,MAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBG,WAArB;AACD,KAHD,CAGE,OAAOF,KAAP,EAAc;AACdV,MAAAA,OAAO,CAACC,GAAR,CAAY;AAAEU,QAAAA,OAAO,EAAED,KAAK,CAACC;AAAjB,OAAZ;AACD;AACF;AACF,CAzBD","sourcesContent":["const { MysqlConnection } = require(\"../../repository/MysqlConnection\");\r\nimport { AnilistClient } from \"../../http/AnilistClient\";\r\nimport { gql } from \"@apollo/client\";\r\nconst Anime = require(\"../../models/animes\")(MysqlConnection);\r\n\r\nexport default async (req, res) => {\r\n  if (req.method === \"POST\") {\r\n    try {\r\n      console.log(res);\r\n      const animes = {\r\n        type: \"toto\",\r\n        english: \"dfege\",\r\n        romaji: \"dede\",\r\n        description: \"fsjfdsjmgjbqreogb\",\r\n        score: 2,\r\n      };\r\n      res.status(200).json(animes);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  }\r\n\r\n  if (req.method === \"GET\") {\r\n    try {\r\n      const allResponse = await Anime.findAll();\r\n      res.status(202).json(allResponse);\r\n    } catch (error) {\r\n      console.log({ message: error.message });\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}